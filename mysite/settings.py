"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 3.0.6.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '^a^k2q9(+%hmasq%1xfjpwiu@sy#cwiqp%%78=v5lql2naelz@'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = []


# Application definition

INSTALLED_APPS = [
    'polls.apps.PollsConfig',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'django.contrib.sites',
    'djangosaml2',
    'sslserver',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'mysite.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'mysite.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}

SITE_ID = 1

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'djangosaml2.backends.Saml2Backend',
]

# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

LOGIN_REDIRECT_URL = '/polls/'

# Settings for Django SAML2
LOGIN_URL = '/saml2/login/'

SESSION_EXPIRE_AT_BROWSER_CLOSE = True

import saml2
import saml2.saml
SAML_CONFIG = {
  # full path to the xmlsec1 binary programm
  'xmlsec_binary': '/usr/local/bin/xmlsec1',

  # your entity id, usually your subdomain plus the url to the metadata view
  'entityid': 'https://localhost:8080/saml2/metadata/',

  # directory with attribute mapping
  'attribute_map_dir': os.path.join(BASE_DIR, 'attributemaps'),

  # this block states what services we provide
  'service': {
      # we are just a lonely SP
      'sp' : {
          'name': 'Federated Django sample SP',
          'name_id_format': saml2.saml.NAMEID_FORMAT_EMAILADDRESS,
          'allow_unsolicited' : True,
          'endpoints': {
              # url and binding to the assertion consumer service view
              # do not change the binding or service name
              'assertion_consumer_service': [
                  ('https://localhost:8080/saml2/acs/',
                   saml2.BINDING_HTTP_POST),
                  ],
              # url and binding to the single logout service view
              # do not change the binding or service name
              'single_logout_service': [
                  ('https://localhost:8080/saml2/ls/',
                   saml2.BINDING_HTTP_REDIRECT),
                  ('https://localhost:8080/saml2/ls/post',
                   saml2.BINDING_HTTP_POST),
                  ],
              },
           # Mandates that the identity provider MUST authenticate the
           # presenter directly rather than rely on a previous security context.
          'force_authn': False,

           # Enable AllowCreate in NameIDPolicy.
          'name_id_format_allow_create': False,

           # attributes that this project need to identify a user
          'required_attributes': ['uid'],

           # attributes that may be useful to have but not required
          'optional_attributes': ['eduPersonAffiliation'],

          # in this section the list of IdPs we talk to are defined
          # This is not mandatory! All the IdP available in the metadata will be considered.
          'idp': {
              # we do not need a WAYF service since there is
              # only an IdP defined here. This IdP should be
              # present in our metadata

              # the keys of this dictionary are entity ids
              'https://app.onelogin.com/saml/metadata/1671a9b1-a436-46b4-a88c-d546bf29b263': {
                  'single_sign_on_service': {
                      saml2.BINDING_HTTP_REDIRECT: 'https://abundant-dev.onelogin.com/trust/saml2/http-post/sso/1671a9b1-a436-46b4-a88c-d546bf29b263',
                      },
                  'single_logout_service': {
                      saml2.BINDING_HTTP_REDIRECT: 'https://abundant-dev.onelogin.com/trust/saml2/http-redirect/slo/1161957',
                      },
                  },
              },
          },
      },

  # where the remote metadata is stored
  'metadata': {
      'remote': [{
          'url': 'https://app.onelogin.com/saml/metadata/1671a9b1-a436-46b4-a88c-d546bf29b263',
          'cert': os.path.join(BASE_DIR, 'onelogin.cert'),
          }]
      },

  # set to 1 to output debugging information
  'debug': 1,

  # Signing
  'key_file': os.path.join(BASE_DIR, 'keys/mycert.key'),  # private part
  'cert_file': os.path.join(BASE_DIR, 'keys/mycert.cert'),  # public part

  # Encryption
  'encryption_keypairs': [{
      'key_file': os.path.join(BASE_DIR, 'keys/my_encryption_key.key'),  # private part
      'cert_file': os.path.join(BASE_DIR, 'keys/my_encryption_key.cert'),  # public part
  }],

  # own metadata settings
  'contact_person': [
      {'given_name': 'Charlie',
       'sur_name': 'Garrett',
       'company': 'None',
       'email_address': 'charlie.garrett@gmail.com',
       'contact_type': 'technical'},
      ],
  # you can set multilanguage information here
  'organization': {
      'name': [('Me', 'en')],
      'display_name': [('Charlie', 'en')],
      'url': [('https://localhost:8080', 'en')],
      },
  'valid_for': 24,  # how long is our metadata valid

  # Library does not know about attributes for microsoft claims
  'allow_unknown_attributes': True
  # TODO(Charlie): Probably have to change attribute mappings.
}

SAML_DJANGO_USER_MAIN_ATTRIBUTE = 'email'
SAML_DJANGO_USER_MAIN_ATTRIBUTE_LOOKUP = '__iexact'
SAML_CREATE_UNKNOWN_USER = False
SAML_ATTRIBUTE_MAPPING = {
    'User.email': ('email', ),
    'User.FirstName': ('first_name', ),
    'User.LastName': ('last_name', ),
}

SESSION_COOKIE_SAMESITE=None

LOGGING = {
    'version': 1,
    'disable_existing_loggers': False,
    'handlers': {
        'file': {
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': '/Users/garrett/Projects/CommCare/DjangoApp/mysite_saml/debug.log',
        },
    },
    'loggers': {
        'django': {
            'handlers': ['file'],
            'level': 'DEBUG',
            'propagate': True,
        },
    },
}
